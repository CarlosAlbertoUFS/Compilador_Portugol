/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AElementoExpMenorMaior extends PExpMenorMaior
{
    private PElemento _elemento_;

    public AElementoExpMenorMaior()
    {
        // Constructor
    }

    public AElementoExpMenorMaior(
        @SuppressWarnings("hiding") PElemento _elemento_)
    {
        // Constructor
        setElemento(_elemento_);

    }

    @Override
    public Object clone()
    {
        return new AElementoExpMenorMaior(
            cloneNode(this._elemento_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAElementoExpMenorMaior(this);
    }

    public PElemento getElemento()
    {
        return this._elemento_;
    }

    public void setElemento(PElemento node)
    {
        if(this._elemento_ != null)
        {
            this._elemento_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._elemento_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._elemento_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._elemento_ == child)
        {
            this._elemento_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._elemento_ == oldChild)
        {
            setElemento((PElemento) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
