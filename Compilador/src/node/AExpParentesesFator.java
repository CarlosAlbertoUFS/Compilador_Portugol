/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AExpParentesesFator extends PFator
{
    private TParenteseEsq _esq_;
    private PExpAritimetrica _expAritimetrica_;
    private TParenteseDir _dir_;

    public AExpParentesesFator()
    {
        // Constructor
    }

    public AExpParentesesFator(
        @SuppressWarnings("hiding") TParenteseEsq _esq_,
        @SuppressWarnings("hiding") PExpAritimetrica _expAritimetrica_,
        @SuppressWarnings("hiding") TParenteseDir _dir_)
    {
        // Constructor
        setEsq(_esq_);

        setExpAritimetrica(_expAritimetrica_);

        setDir(_dir_);

    }

    @Override
    public Object clone()
    {
        return new AExpParentesesFator(
            cloneNode(this._esq_),
            cloneNode(this._expAritimetrica_),
            cloneNode(this._dir_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExpParentesesFator(this);
    }

    public TParenteseEsq getEsq()
    {
        return this._esq_;
    }

    public void setEsq(TParenteseEsq node)
    {
        if(this._esq_ != null)
        {
            this._esq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._esq_ = node;
    }

    public PExpAritimetrica getExpAritimetrica()
    {
        return this._expAritimetrica_;
    }

    public void setExpAritimetrica(PExpAritimetrica node)
    {
        if(this._expAritimetrica_ != null)
        {
            this._expAritimetrica_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expAritimetrica_ = node;
    }

    public TParenteseDir getDir()
    {
        return this._dir_;
    }

    public void setDir(TParenteseDir node)
    {
        if(this._dir_ != null)
        {
            this._dir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dir_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._esq_)
            + toString(this._expAritimetrica_)
            + toString(this._dir_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._esq_ == child)
        {
            this._esq_ = null;
            return;
        }

        if(this._expAritimetrica_ == child)
        {
            this._expAritimetrica_ = null;
            return;
        }

        if(this._dir_ == child)
        {
            this._dir_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._esq_ == oldChild)
        {
            setEsq((TParenteseEsq) newChild);
            return;
        }

        if(this._expAritimetrica_ == oldChild)
        {
            setExpAritimetrica((PExpAritimetrica) newChild);
            return;
        }

        if(this._dir_ == oldChild)
        {
            setDir((TParenteseDir) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
